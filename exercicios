-- exercicio 1
CREATE TRIGGER inserção_cliente AFTER INSERT ON Clientes
	FOR EACH ROW INSERT INTO Auditoria VALUES("Um novo cliente foi inserido");

-- exercicio 2

CREATE TRIGGER tentativa_de_exclusao BEFORE DELETE ON Clientes
	FOR EACH ROW INSERT INTO Auditoria VALUES("Houve uma tentativa de exclusão de um cliente");

-- exercicio 3

DELIMITER //
CREATE TRIGGER cliente_atulizado AFTER UPDATE ON Clientes
	FOR EACH ROW
	BEGIN
		DECLARE novo_nome VARCHAR(100);
		DECLARE antigo_nome VARCHAR(100);

		SET nome_antigo = OLD.nome;
		SET nome_novo = NEW.nome;

		INSERT INTO Auditoria VALUES(antigo_nome, novo_nome);
	END //
DELIMITER ;

-- exercicio 4

DELIMITER //
CREATE TRIGGER impedir_insercao BEFORE UPDATE ON Clientes
	FOR EACH ROW
	BEGIN
		DECLARE novo_nome VARCHAR(100);
		DECLARE antigo_nome VARCHAR(100);

		SET nome_antigo = OLD.nome;
		SET nome_novo = NEW.nome;

		IF nome_novo IS NULL OR nome_novo = '' THEN
			INSERT INTO Auditoria VALUES("Teve uma tentativa de atualizar um nome da tabela Clientes para NULL ou vazio");
			SIGNAL SQLSTATE "45000"
			SET MESSAGE_TEXT = "Não tem uma permissão para atualizar um nome da tabela Clientes para NULL ou vazio"
		END IF //
	END //
DELIMITER ;

-- exercicio 5

DELIMITER //
CREATE TRIGGER pedido AFTER INSERT ON Pedidos
	FOR EACH ROW
	BEGIN
		DECLARE id_produto INT;
		DECLARE pedido_quant INT;
		DECLARE estoque_atual INT;
		
		SET id_produto = NEW.produto_id;
		SET pedido_quant = NEW.quantidade;
		
		SELECT estoque INTO estoque_atual FROM Produtos WHERE id = id_produto;

		UPDATE Produtos SET estoque = estoque - pedido_quant WHERE id = id_produto;
		
		IF estoque_atual - pedido_quant < 5 THEN
			INSERT INTO Auditoria (mensagem, data_hora)
			VALUES ("Estoque do produto " || id_produto || " está com menos de 5 unidades");
		END IF //
	END //
DELIMITER ;
